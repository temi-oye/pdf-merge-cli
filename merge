#!/bin/python
import argparse
import os
from pypdf import PdfWriter
import subprocess


def merge(pdfs:list[str], dest:str, name:str):
    merger = PdfWriter()
    valid_pdfs = filter(lambda x: x.endswith(".pdf"), pdfs)
    for pdf in valid_pdfs:
        merger.append(pdf)

    os.chdir(os.path.expanduser(dest))
    merger.write(name)
    merger.close()
    
    subprocess.run(["notify-send", "-i", "face-wink", "-t", "300", "pdfs merged!", f"{os.path.abspath(os.curdir)}"])


def select_merge(args: argparse.Namespace):
    name = args.name
    should_sort = args.sort
    dest = args.dest

    print("not ALL!!")
    pdfs = sorted(args.input) if should_sort else args.input

    merge(pdfs, dest, name)


def all_merge(args: argparse.Namespace):
    name = args.name
    should_sort = args.sort
    dest = args.dest

    os.chdir(args.source)
    pdfs = list(filter(lambda x: x.endswith(".pdf"), os.listdir()))


    pdfs = sorted(os.listdir()) if should_sort else os.listdir()
    print(f"pdfs: {pdfs}")
    print(os.path.expanduser(dest))
    merge(pdfs, os.path.expanduser(dest), name)


def main():
    parser = argparse.ArgumentParser(prog="PDF-Merger", description="merge pdfs via the cli", epilog="example merge.py --all ")
    subparsers = parser.add_subparsers(help="use all to merge all pdfs")
    all_parser = subparsers.add_parser("all", help="all help")
    select_parser = subparsers.add_parser("select", help="select help")


    select_parser.add_argument("-i", "--input", nargs="+", help="list of files to be merged")
    select_parser.add_argument("-s", "--sort", help="sort pdfs give in alphabetical order (default)", action="store_true")
    select_parser.add_argument("-n", "--name", help="name of the combined pdf, default is combined.pdf", default="combined.pdf")
    select_parser.add_argument("-d", "--dest", help="path to where the combines pdf should be stored", default=".")
    select_parser.set_defaults(func=select_merge)

    all_parser.add_argument("-s", "--sort", help="sort pdfs give in alphabetical order (default)", action="store_true")
    all_parser.add_argument("-n", "--name", help="name of the combined pdf, default is combined.pdf", default="combined.pdf")
    all_parser.add_argument("source", help="path directory containing pdfs to be merged", default=".")
    all_parser.add_argument("dest", help="where merged pdfs will be stored", default=".")
    all_parser.set_defaults(func=all_merge)
    
    args = parser.parse_args()
    args.func(args)

    print(args)
        


if __name__ == "__main__":
    main()